version: '3.8'
services:
  ## SERVER ##
  server:
    build:
      context: ./backend
      dockerfile: Dockerfile
    networks:
      - db_network
      - app_network
      - wpt_network
    depends_on:
      - postgres_db
      - wpt_server
    # ports:
    #   - target: 3000
    #     published: 3000
    #     protocol: tcp
    #     mode: host
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    command: ['node', 'main.js']
    container_name: server

  ## CLIENT ##
  client:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - app_network
    ports:
      - target: 80
        published: 8080
        protocol: tcp
        mode: host
    depends_on:
      - server
    restart: unless-stopped
    container_name: client

  ## POSTGRES ##
  postgres_db:
    image: postgres
    networks:
      - db_network
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=change_me
      - POSTGRES_DB=wpt_app
    volumes:
      - ./server/database/data/prod:/var/lib/postgresql/data/
    restart: unless-stopped
    container_name: postgres_db

  ## WPT SERVER ##
  wpt_server:
    build:
      context: ./wpt/server
      dockerfile: Dockerfile
    networks:
      - wpt_network

    ports:
      - target: 80
        published: 4000
        protocol: tcp
        mode: host

    restart: unless-stopped
    container_name: wpt-server

  ## WPT AGENT ##
  wpt_agent:
    # network_mode: host
    build:
      context: ./wpt/agent
      dockerfile: Dockerfile
    networks:
      - wpt_network
    shm_size: '1gb'
    depends_on:
      - wpt_server
    environment:
      SERVER_URL: 'http://wpt-server/work/'
      LOCATION: 'Local'
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    container_name: wpt-agent
    volumes:
      - wptagent_vol:/wptagent

volumes:
  wptagent_vol:
    name: wpt_agent_data

networks:
  db_network:
    driver: bridge
  app_network:
    driver: bridge
  wpt_network:
    driver: bridge